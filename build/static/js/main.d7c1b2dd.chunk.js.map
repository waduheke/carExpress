{"version":3,"sources":["reducers/userTime.js","reducers/index.js","Components/bizchars/totalAnalyze.jsx","Components/picktime.jsx","actions/CarPick-MonthPick/CarPick.js","Components/listRender.jsx","Pages/Popview/index.jsx","Components/failureTimeDistribution.jsx","Components/failureCarDistribution.jsx","Components/userCarDistribution.jsx","Components/failureHistogram.jsx","Components/china-map/drawit.jsx","Pages/Home/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["initialState","year","value","rootReducer","combineReducers","userTime","state","arguments","length","undefined","action","type","TimeChange","TotalChart","height","Data","_this","props","userTimeChange","window","screen","availHeight","this","setState","chart","forceFit","react_default","a","createElement","BizCharts","data","scale","min","range","onGetG2Instance","g2Chart","animate","console","log","name","crosshairs","position","size","shape","style","stroke","lineWidth","React","Component","connect","Picktime","Option","Select","OptGroup","MonthPicker","DatePicker","dispatch","es_select","onChange","carName","receivePosts","CarPick","defaultValue","width","label","placeholder","picktime","ListItem","ListRender","listItem","values","map","index","key","PopView","visible","windowHeight","showModal","handleCancel","e","_this2","modal","title","onCancel","centered","footer","display","Geom","FailureTimeDistribution","dv","DataSet","createView","source","month","奇瑞","捷达","transform","fields","innerHeight","formatter","val","concat","color","failureCarDistribution","DataView","item","count","field","dimension","as","percent","padding","radius","showTitle","itemTpl","active","tooltip","content","point","offset","failureHistogram","sales","tickInterval","userData","into","callback","row","push","longitude","centroidX","latitude","centroidY","Math","random","geoDv","sync","nice","Demo","transformation","axios","get","then","res","onPlotDblClick","ev","onPlotClick","blur","Pages_Popview","Home","breakdownNumber","breakdownClassNumber","breakdownClass","col","className","span","totalAnalyze","userCarDistribution","Components_picktime","drawit","listRender","failureTimeDistribution","Components_failureHistogram","Components_failureCarDistribution","App","src_Pages_Home","Boolean","location","hostname","match","store","createStore","reducer","applyMiddleware","thunkMiddleware","ReactDOM","render","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7c1b2dd.chunk.js","sourcesContent":["const initialState=[{\r\n    year: '1996',\r\n    value: 6,\r\n  },\r\n  {\r\n    year: '1997',\r\n    value: 7,\r\n  },\r\n  {\r\n    year: '1998',\r\n    value: 9,\r\n  },\r\n  {\r\n    year: '1999',\r\n    value: 13,\r\n  },\r\n  {\r\n    year: '2000',\r\n    value: 9,\r\n  },\r\n  {\r\n    year: '2001',\r\n    value: 9,\r\n  },\r\n  {\r\n    year: '2002',\r\n    value: 9,\r\n  },];\r\n\r\n  export default function userTimeChange(state=initialState, action){\r\n      if (action.type=='UpdateTime'){\r\n          return action.TimeChange\r\n      }\r\n      else return state\r\n  }","import {combineReducers} from 'redux';\r\nimport userTime from './userTime'\r\n\r\nconst rootReducer = combineReducers({userTime});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from 'bizcharts';\r\nimport {connect} from 'react-redux';\r\nclass TotalChart extends React.Component {\r\n  \r\n  state={\r\n    height:230,\r\n    Data:this.props.userTimeChange,\r\n  }\r\n\r\n  componentWillMount(){\r\n    let height = window.screen.availHeight\r\n    this.setState({height:height})\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const cols = {\r\n      value: {\r\n        min: 0,\r\n      },\r\n      year: {\r\n        range: [0, 1],\r\n      },\r\n    };\r\n    if (this.chart) {\r\n      this.chart.forceFit();\r\n    }\r\n    // 这里考虑获取屏幕整体高度，通过换算确定一个图形的具体高度，用px表示，通过变量传入，实现响应式\r\n    return (\r\n      <div >\r\n        <Chart height={this.state.height/4.4}  data={this.props.userTimeChange} scale={cols} onGetG2Instance={g2Chart => {\r\n    g2Chart.animate(false);\r\n    console.log(g2Chart);\r\n      }} forceFit>\r\n          <Axis name=\"year\" />\r\n          <Axis name=\"value\" />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: 'y',\r\n            }}\r\n          />\r\n          <Geom type=\"line\" position=\"year*value\" size={2} />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"year*value\"\r\n            size={4}\r\n            shape={'circle'}\r\n            style={{\r\n              stroke: '#fff',\r\n              lineWidth: 1,\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  let userTimeChange = state.userTime;\r\n  console.log('state',userTimeChange);\r\n  return {\r\n    userTimeChange\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(TotalChart);\r\n","import { DatePicker, Select } from 'antd'\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CarPick from '../actions/CarPick-MonthPick/CarPick.js';\r\n\r\n\r\nclass Picktime extends React.Component{\r\n  render(){\r\n    const { Option, OptGroup } = Select;\r\n    const { MonthPicker } = DatePicker;\r\n    let {dispatch} = this.props;\r\n    return(\r\n    <div>\r\n        <Select\r\n          onChange={function(){\r\n            dispatch(CarPick('白龙马'));\r\n          }}\r\n          defaultValue=\"全部车型\"\r\n          style={{ width: 200 }}\r\n        >\r\n          <OptGroup label=\"单独选择\">\r\n            <Option value=\"福特\">福特</Option>\r\n            <Option value=\"本田\">本田</Option>\r\n            <Option value=\"奔驰\">奔驰</Option>\r\n            <Option value=\"宝马\">宝马</Option>\r\n            <Option value=\"马自达\">马自达</Option>\r\n          </OptGroup>\r\n          <OptGroup label=\"全部选择\">\r\n            <Option value=\"全部车型\">全部车型</Option>\r\n          </OptGroup>\r\n        </Select>  \r\n        <MonthPicker placeholder=\"Select month\" />\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet picktime = connect()(Picktime)\r\n\r\nexport default picktime  ","import axios from 'axios';\r\n\r\n\r\nfunction receivePosts(carName,data){\r\n    return{\r\n        type:'UpdateTime',\r\n        carName:carName,\r\n        TimeChange:data\r\n    }\r\n}\r\n\r\nexport default function fetchPostCars(carName){\r\n    let data = [{\r\n        year: '1996',\r\n        value: 6,\r\n      },\r\n      {\r\n        year: '1997',\r\n        value: 7,\r\n      },\r\n      {\r\n        year: '1998',\r\n        value: 9,\r\n      },];\r\n    return function(dispatch){\r\n\r\n        // return axios('http://www.baidu.com')\r\n        // .then(res=>{res.json()})\r\n        // .then(data=>dispatch(receivePosts(carName, data)))\r\n        return dispatch(receivePosts(carName, data));\r\n    }\r\n}","import React from 'react';\r\n\r\nfunction ListItem(props){\r\n    return <p>{props.value}</p>\r\n}\r\n\r\nfunction ListRender(props){\r\n    const values = props.values;\r\n    const listItem = values.map((value, index)=>\r\n        <ListItem key={index} value={value} />\r\n    );\r\n    return (\r\n        <div>\r\n            {listItem}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListRender;","import React from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport './index.css';\r\n\r\nclass PopView extends React.Component {\r\n  state = {\r\n    visible: false,\r\n    windowHeight:100,\r\n  }\r\n\r\n  componentWillMount(){\r\n    let height = window.screen.availHeight;\r\n    this.setState({windowHeight:height},()=>{console.log('state:'+this.state.windowHeight);});\r\n    //setState是异步的更新，不能直接setState后就改变！\r\n}\r\n  \r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  }\r\n\r\n  handleCancel = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          title=\"个体用户详细\"\r\n          visible={this.props.visible}\r\n          onCancel={this.props.handleCancel}\r\n          width={'75%'}\r\n          style={{centered:true}}\r\n          footer={null}\r\n        >\r\n          <div>\r\n              <div style={{'width':'50%','display':'inline-block'}}>\r\n                <div style={{'height':this.state.windowHeight/3.3}}>基本行驶数据</div>\r\n                <div style={{'height':this.state.windowHeight/3.3}}>驾驶行为评价</div>\r\n              </div>\r\n              <div style={{'width':'50%','display':'inline-block'}}>\r\n                <div style={{'height':this.state.windowHeight/3.3}}>不良驾驶行为</div>\r\n                <div style={{'height':this.state.windowHeight/3.3}}>车况分析</div>\r\n              </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PopView;","import React from \"react\";\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\nconsole.log(Geom);\r\nclass FailureTimeDistribution extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"一月\",\r\n        奇瑞: 7.0,\r\n        捷达: 3.9\r\n      },\r\n      {\r\n        month: \"二月\",\r\n        奇瑞: 6.9,\r\n        捷达: 4.2\r\n      },\r\n      {\r\n        month: \"三月\",\r\n        奇瑞: 9.5,\r\n        捷达: 5.7\r\n      },\r\n      {\r\n        month: \"四月\",\r\n        奇瑞: 14.5,\r\n        捷达: 8.5\r\n      },\r\n      {\r\n        month: \"五月\",\r\n        奇瑞: 18.4,\r\n        捷达: 11.9\r\n      },\r\n      {\r\n        month: \"六月\",\r\n        奇瑞: 21.5,\r\n        捷达: 15.2\r\n      },\r\n      {\r\n        month: \"七月\",\r\n        奇瑞: 25.2,\r\n        捷达: 17.0\r\n      },\r\n      {\r\n        month: \"八月\",\r\n        奇瑞: 26.5,\r\n        捷达: 16.6\r\n      },\r\n      {\r\n        month: \"九月\",\r\n        奇瑞: 23.3,\r\n        捷达: 14.2\r\n      },\r\n      {\r\n        month: \"十月\",\r\n        奇瑞: 55.3,\r\n        捷达: 10.3\r\n      },\r\n      {\r\n        month: \"十一月\",\r\n        奇瑞: 13.9,\r\n        捷达: 6.6\r\n      },\r\n      {\r\n        month: \"十二月\",\r\n        奇瑞: 9.6,\r\n        捷达: 4.8\r\n      }\r\n    ];\r\n    const ds = new DataSet();\r\n    const dv = ds.createView().source(data);\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"奇瑞\", \"捷达\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key字段\r\n      value: \"temperature\" // value字段\r\n    });\r\n    console.log(dv);\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    };\r\n    if (this.chart) {\r\n        this.chart.forceFit();\r\n      }\r\n    return (\r\n      <div>\r\n        <Chart height={window.innerHeight/4.1} data={dv} scale={cols} forceFit onGetG2Instance={(chart) => {\r\n        this.chart = chart;\r\n      }}>\r\n          <Legend />\r\n          <Axis name=\"month\" />\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FailureTimeDistribution;\r\n","import React from \"react\";\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Coord,\r\n  Label,\r\n  Legend,\r\n} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\n\r\nclass failureCarDistribution extends React.Component {\r\n  render() {\r\n    const { DataView } = DataSet;\r\n    const data = [\r\n      {\r\n        item: \"瑞虎\",\r\n        count: 40\r\n      },\r\n      {\r\n        item: \"QQ\",\r\n        count: 21\r\n      },\r\n      {\r\n        item: \"奇瑞\",\r\n        count: 17\r\n      },\r\n      {\r\n        item: \"捷达\",\r\n        count: 13\r\n      },\r\n      {\r\n        item: \"其他\",\r\n        count: 9\r\n      }\r\n    ];\r\n    const dv = new DataView();\r\n    dv.source(data).transform({\r\n      type: \"percent\",\r\n      field: \"count\",\r\n      dimension: \"item\",\r\n      as: \"percent\"\r\n    });\r\n    const cols = {\r\n      percent: {\r\n        formatter: val => {\r\n          val = val * 100 + \"%\";\r\n          return val;\r\n        }\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <Chart\r\n          height={window.innerHeight/6.5}\r\n          data={dv}\r\n          scale={cols}\r\n          forceFit\r\n          padding={[0,0,30,0]}\r\n        >\r\n          <Coord type=\"theta\" radius={1} />\r\n          \r\n        \r\n          <Tooltip\r\n            showTitle={false}\r\n            itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\r\n          />\r\n          <Geom\r\n            type=\"intervalStack\"\r\n            active={true}\r\n            position=\"percent\"\r\n            color=\"item\"\r\n            tooltip={[\r\n              \"item*percent\",\r\n              (item, percent) => {\r\n                percent = percent * 100 + \"%\";\r\n                return {\r\n                  name: item,\r\n                  value: percent\r\n                };\r\n              }\r\n            ]}\r\n            style={{\r\n              lineWidth: 1,\r\n              stroke: \"#fff\"\r\n            }}\r\n          >\r\n            <Label\r\n              content=\"percent\"\r\n              formatter={(val, item) => {\r\n                return item.point.item + \": \" + val;\r\n              }}\r\n            />\r\n          </Geom>\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default failureCarDistribution;\r\n","import React from \"react\";\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Coord,\r\n  Label,\r\n  Legend,\r\n} from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\n\r\nclass failureCarDistribution extends React.Component {\r\n  render() {\r\n    const { DataView } = DataSet;\r\n    const data = [\r\n      {\r\n        item: \"瑞虎\",\r\n        count: 40\r\n      },\r\n      {\r\n        item: \"QQ\",\r\n        count: 21\r\n      },\r\n      {\r\n        item: \"奇瑞\",\r\n        count: 17\r\n      },\r\n      {\r\n        item: \"捷达\",\r\n        count: 13\r\n      },\r\n      {\r\n        item: \"其他\",\r\n        count: 9\r\n      }\r\n    ];\r\n    const dv = new DataView();\r\n    dv.source(data).transform({\r\n      type: \"percent\",\r\n      field: \"count\",\r\n      dimension: \"item\",\r\n      as: \"percent\"\r\n    });\r\n    const cols = {\r\n      percent: {\r\n        formatter: val => {\r\n          val = val * 100 + \"%\";\r\n          return val;\r\n        }\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <Chart\r\n          height={window.innerHeight/2.5}\r\n          data={dv}\r\n          scale={cols}\r\n          forceFit\r\n          padding={[0,0,0,0]}\r\n        >\r\n          <Coord type=\"theta\" radius={0.75} />\r\n          <Axis name=\"percent\" />\r\n        \r\n          <Tooltip\r\n            showTitle={false}\r\n            itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\r\n          />\r\n          <Geom\r\n            type=\"intervalStack\"\r\n            active={true}\r\n            position=\"percent\"\r\n            color=\"item\"\r\n            tooltip={[\r\n              \"item*percent\",\r\n              (item, percent) => {\r\n                percent = percent * 100 + \"%\";\r\n                return {\r\n                  name: item,\r\n                  value: percent\r\n                };\r\n              }\r\n            ]}\r\n            style={{\r\n              lineWidth: 1,\r\n              stroke: \"#fff\"\r\n            }}\r\n          >\r\n            <Label        \r\n                offset={-30}    \r\n              content=\"percent\"\r\n              formatter={(val, item) => {\r\n                return item.point.item + \": \" + val;\r\n              }}\r\n            />\r\n          </Geom>\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default failureCarDistribution;\r\n","import React from \"react\";\r\nimport {\r\n  G2,\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Coord,\r\n  Label,\r\n  Legend,\r\n  View,\r\n  Guide,\r\n  Shape,\r\n  Facet,\r\n  Util\r\n} from \"bizcharts\";\r\n\r\nclass failureHistogram extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1951 年\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"1952 年\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"1956 年\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"1957 年\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"1958 年\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"1959 年\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"1960 年\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"1962 年\",\r\n        sales: 38\r\n      }\r\n    ];\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    };\r\n    if (this.chart) {\r\n        this.chart.forceFit();\r\n      }\r\n    return (\r\n      <div>\r\n        <Chart height={window.innerHeight/4.1} data={data} scale={cols} forceFit onGetG2Instance={(chart) => {\r\n        this.chart = chart;\r\n      }}>\r\n          <Axis name=\"year\" />\r\n          <Axis name=\"sales\" />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom type=\"interval\" position=\"year*sales\" />\r\n        </Chart>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default failureHistogram;\r\n","// data-set 可以按需引入，除此之外不要引入别的包\r\nimport React from 'react';\r\nimport { Chart, View, Geom, Label } from 'bizcharts';\r\nimport DataSet from '@antv/data-set';\r\nimport Data from './china.json';\r\nimport detailData from './detail.json';\r\nimport axios from 'axios';\r\nimport Popview from '../../Pages/Popview/index.jsx';\r\n\r\nlet data = Data;\r\nlet userData = [];\r\nfunction into(data){\r\n  userData=[];\r\n  let ds = new DataSet();\r\n  let geoView = ds.createView();\r\n  let geoDv = geoView.source(data, {\r\n    type: 'GeoJSON',\r\n  }).transform({\r\n    type: 'map',\r\n    callback: function callback(row) {\r\n      userData.push({\r\n        longitude: row.centroidX,\r\n        latitude: row.centroidY,\r\n        name: row.name,\r\n        value: Math.random() * (1000 - 1),\r\n      });\r\n      return row;\r\n    },\r\n  });\r\n  return geoDv;\r\n}\r\n\r\n\r\nlet geoDv = into(data);\r\nconsole.log('geoDv',geoDv);\r\n\r\nconst scale = {\r\n  latitude: {\r\n    sync: true,\r\n    nice: false,\r\n  },\r\n  longitude: {\r\n    sync: true,\r\n    nice: false,\r\n  },\r\n};\r\n\r\nclass Demo extends React.Component {\r\n  \r\n  state={\r\n    map:geoDv,\r\n    visible:false,\r\n  }\r\n  \r\n  transformation=()=>{\r\n    axios.get('https://www.easy-mock.com/mock/5cb01c7eb35cf41115ae4493/waduheck/#!method=get')\r\n      .then((res)=>{\r\n        data = res.data.data;\r\n        geoDv=into(data);\r\n        this.setState({map:geoDv});\r\n        console.log('看到geoDv',geoDv);\r\n      })\r\n  }\r\n  \r\n  handleCancel = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  }\r\n  \r\n  componentDidMount(){\r\n    \r\n  }\r\n\r\n  \r\n  render() {\r\n    \r\n    return (\r\n      <div>\r\n        <Chart height={window.innerHeight/1.8} onPlotDblClick={ev=>{this.setState({visible:true})}} onPlotClick={ev=>{this.transformation()}} scale={scale}  forceFit padding={0}>\r\n        {/* // geo view */}\r\n        <View data={this.state.map}>\r\n          <Geom type=\"polygon\" active={true} color= \"name\" position=\"longitude*latitude\" >\r\n            <Label content=\"name\" offset={1} />\r\n          </Geom>\r\n        </View>\r\n        {/* // user view */}\r\n        <View data={userData}>\r\n          <Geom\r\n            type=\"point\"\r\n            active={true}\r\n            position=\"longitude*latitude\"\r\n            color={['value', 'red']}\r\n            size={5}\r\n            style={{\r\n              blur: 1,\r\n            }}\r\n          />\r\n        </View>\r\n      </Chart>\r\n      <Popview visible={this.state.visible} handleCancel={this.handleCancel}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Demo;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport Totalchart from '../../Components/bizchars/totalAnalyze.jsx';\r\nimport Picktime from '../../Components/picktime.jsx';\r\nimport ListRender from '../../Components/listRender.jsx';\r\nimport PopView from '../Popview/index.jsx';\r\nimport FailureTimeDistribution from '../../Components/failureTimeDistribution.jsx';\r\nimport FailureCarDistribution from '../../Components/failureCarDistribution.jsx';\r\nimport UserCarDistribution from '../../Components/userCarDistribution.jsx';\r\nimport FailureHistogram from '../../Components/failureHistogram.jsx';\r\nimport Drawit from '../../Components/china-map/drawit.jsx';\r\n\r\nimport './index.css';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n      breakdownNumber: 123456,\r\n      breakdownClassNumber: 11,\r\n      breakdownClass: ['驱动系统故障报警', '制动系统故障报警', '电池管理系统故障报警'],\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Row style={{ height: '100%', width: '100%' }}>\r\n          <Col className=\"changeHeight\" span={8}>\r\n            <div>\r\n              <div className='totalfailure-title'>用户时间变化</div>\r\n              <div style={{ display: 'inline-block', width: '48%' }}>\r\n                <Totalchart />\r\n                <Totalchart />\r\n              </div>\r\n              <div style={{ display: 'inline-block', width: '48%' }}>\r\n                <Totalchart />\r\n                <Totalchart />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className='single-title'>用户地区车型分布</div>\r\n              {/* <PopView/> */}\r\n              <div className='failureDistribution'>\r\n                <UserCarDistribution/>\r\n              </div>\r\n              <div className='failureDistribution'>\r\n                <UserCarDistribution/>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"changeHeight\" span={8}>\r\n            <div className='title'>车联网大数据应用平台</div>\r\n            <Picktime />\r\n            {/* 这里地图加一个回退按钮，以防误点之后，无法返回到全国地图 */}\r\n            <div>\r\n              <Drawit />\r\n            </div>\r\n            <div>\r\n              <p>故障数量</p>\r\n              <p>{this.state.breakdownNumber}</p>\r\n              <p>涉及故障类别</p>\r\n              <p>{this.state.breakdownClassNumber}个</p>\r\n              <p>涉及故障类别</p>\r\n              <ListRender values={this.state.breakdownClass} />\r\n            </div>\r\n          </Col>\r\n          <Col className=\"changeHeight\" span={8}>\r\n            <div>\r\n              <div className='totalfailure-title'>综合故障</div>\r\n              <div className='failureDistribution'>\r\n                <div className='failure-title'>故障数时间分布图</div>\r\n                <FailureTimeDistribution/>\r\n              </div>\r\n              <div className='failureDistribution'>\r\n                <div className='failure-title'>故障单体分布图</div>\r\n                <FailureHistogram/>\r\n              </div>\r\n              <div className='failure-title'>故障车型分布</div>\r\n              <FailureCarDistribution/>\r\n            </div>\r\n            <div className='single-title'>单体故障</div>\r\n            <div>\r\n              <div className='failureDistribution'>\r\n                \r\n                <FailureTimeDistribution/>\r\n              </div>\r\n              <div className='failureDistribution'>\r\n              <FailureCarDistribution/>\r\n              </div>\r\n            </div>\r\n            <div className='stop-title'>制动系统故障分布</div>\r\n            <ul className='stop-list'>\r\n              <li>EPB</li>\r\n              <li>EBD故障指示</li>\r\n              <li>ABS故障指示</li>\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n}\r\nexport default Home;\r\n","import React, { Component } from 'react';\nimport Home from './Pages/Home/index.jsx';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Home/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers/index.js';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\n\n\nReactDOM.render(\n<Provider store={store}>\n    <App/>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}